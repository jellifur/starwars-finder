{"version":3,"sources":["ui/character-card/styles.module.css","ui/search-input/styles.module.css","controllers/character-info/styles.module.css","controllers/search-characters/styles.module.css","controllers/character-info/index.js","ui/search-input/index.js","ui/character-card/index.js","controllers/search-characters/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","characterCard","charImage","labelContainer","label","searchInput","searchBtn","characterInfo","background","search","searchContainer","searchHeader","title","appDescription","searchBox","characters","navBtn","navBtns","CharacterInfo","state","name","height","mass","hairColor","skinColor","eyeColor","birthYear","gender","_this2","this","id","props","match","params","fetch","concat","method","then","res","json","setState","hair_color","skin_color","eye_color","birth_year","_this$state","react_default","a","createElement","className","styles","Component","SearchInput","_this$props","value","onChange","onSubmit","type","onClick","defaultProps","CharacterCard","imageUrl","charId","Link","to","length","src","alt","SearchCharacters","searchValue","nextUrl","undefined","prevUrl","handleSearchChange","event","_this","target","handleSubmit","preventDefault","fetchUrl","url","next","previous","results","getCharId","Fragment","search_input","map","char","toString","character_card","key","App","BrowserRouter","Route","exact","path","process","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c9d8d02.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterCard\":\"styles_characterCard__2QoBh\",\"charImage\":\"styles_charImage__1IJ0i\",\"labelContainer\":\"styles_labelContainer__zqb1g\",\"label\":\"styles_label__1OVfm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"styles_searchInput__1NR-o\",\"searchBtn\":\"styles_searchBtn__1FvTu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterInfo\":\"styles_characterInfo__3poHg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"styles_background__2bFrJ\",\"search\":\"styles_search__1CSoC\",\"searchContainer\":\"styles_searchContainer__3uaua\",\"searchHeader\":\"styles_searchHeader__Mu8iB\",\"title\":\"styles_title__1Dqy1\",\"appDescription\":\"styles_appDescription__cbEik\",\"searchBox\":\"styles_searchBox__LZJFk\",\"characters\":\"styles_characters__12x_w\",\"navBtn\":\"styles_navBtn__zhvfh\",\"navBtns\":\"styles_navBtns__KWbTr\"};","import React, { Component } from 'react';\n\nimport styles from './styles.module.css';\n\nclass CharacterInfo extends Component {\n  state = {\n    name: '', \n    height: '', \n    mass: '', \n    hairColor: '', \n    skinColor: '', \n    eyeColor: '', \n    birthYear: '', \n    gender: '', \n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n\n    fetch(`https://swapi.co/api/people/${id}/`, { method: \"GET\" })\n      .then(res => res.json())\n      .then((res) => {\n        if (!res) {\n          return;\n        }\n\n        return this.setState({ \n          name: res.name, \n          height: res.height, \n          mass: res.mass, \n          hairColor: res.hair_color, \n          skinColor: res.skin_color, \n          eyeColor: res.eye_color, \n          birthYear: res.birth_year, \n          gender: res.gender, \n         })\n      });\n  }\n\n  render() {\n    const { name, height, mass, hairColor, skinColor, eyeColor, birthYear, gender } = this.state;\n\n    return (\n      <div className={styles.characterInfo}>\n        name: {name} <br/>\n        height: {height} <br/>\n        mass: {mass} <br/> \n        hairColor: {hairColor} <br/>\n        skinColor: {skinColor} <br/>\n        eyeColor: {eyeColor} <br/> \n        birthYear: {birthYear} <br/> \n        gender: {gender}\n      </div>\n    );\n  }\n}\n\nexport default CharacterInfo;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './styles.module.css';\n\nclass SearchInput extends Component {\n  render() {\n    const { value, onChange, onSubmit } = this.props;\n\n    return (\n      <form className={styles.searchInput}>\n        <input type=\"text\" onChange={onChange} value={value} />\n        <button type=\"submit\" className={styles.searchBtn} onClick={onSubmit}></button>\n      </form>\n    );\n  }\n}\n\nSearchInput.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n  value: '',\n  onSubmit: () => undefined\n};\n\nexport default SearchInput;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\n\nimport styles from './styles.module.css';\n\nclass CharacterCard extends Component {\n  render() {\n    const { name, imageUrl, charId } = this.props;\n\n    return (\n      <Link to={`/character-info/${charId}`}>\n        <div className={styles.characterCard}>\n          {imageUrl && imageUrl.length > 0 && <img className={styles.charImage} src={imageUrl} alt=\"star wars character\"/>}\n          {name && name.length > 0 && <div className={styles.labelContainer}><div className={styles.label}>{name}</div></div>}\n        </div>\n      </Link>\n    );\n  }\n}\n\nCharacterCard.propTypes = {\n  name: PropTypes.string,\n  charId: PropTypes.string,\n  imageUrl: PropTypes.string /* TODO: Pass in image URL to display image of characters */\n};\n\nCharacterCard.defaultProps = {\n  name: '',\n  charId: ''\n};\n\nexport default CharacterCard;\n","import React, { Component } from 'react';\n\nimport SearchInput from 'ui/search-input/index.js';\nimport CharacterCard from 'ui/character-card/index.js';\n\nimport styles from './styles.module.css';\n\nclass SearchCharacters extends Component {\n  state = {\n    searchValue: '',\n    characters: [],\n    nextUrl: undefined,\n    prevUrl: undefined\n  }\n\n  componentDidMount() {\n    /* TODO: Query first set of characters so page is not blank */\n  }\n\n  handleSearchChange = event => this.setState({ searchValue: event.target.value });\n\n  handleSubmit = event => {\n    const { searchValue } = this.state;\n\n    event.preventDefault();\n    if (searchValue && searchValue.length > 0) {\n      this.fetchUrl(`https://swapi.co/api/people/?search=${searchValue}`);\n    }\n  }\n\n  fetchUrl = url => {\n    if (!url) {\n      return;\n    }\n\n    fetch(url, { method: \"GET\" })\n      .then(res => res.json())\n      .then((res) => {\n        if (!res) {\n          return;\n        }\n\n        /* TODO: Get lodash to check nested results more cleanly */\n        const nextUrl = res.next ? res.next : undefined\n        const prevUrl = res.previous ? res.previous : undefined\n        return this.setState({ characters: res.results, prevUrl, nextUrl })\n      });\n  }\n\n  /* HACK: The results doesn't seem to provide the character ID, but it is part of the URL.\n     This function extracts the number.\n  */\n  getCharId = url => url.match(/\\d+/);\n\n  render() {\n    const { searchValue, characters, prevUrl, nextUrl } = this.state;\n\n    return (\n      <React.Fragment>\n        <div className={styles.background}></div>\n\n        <div className={styles.search}>\n          <div className={styles.searchContainer}>\n            <header className={styles.searchHeader}>\n              <h1 className={styles.title}>Star Wars Characters</h1>\n              <p className={styles.appDescription}>\n                You can search for any Star Wars characters. <br/>\n                Lorem ipsum dolor sit amet, consectetur adipiscing. <br/>\n                Sed ut perspiciatis unde omnis iste natus.\n              </p>\n            </header>\n\n            <div className={styles.searchBox}>\n              <SearchInput value={searchValue} onChange={this.handleSearchChange} onSubmit={this.handleSubmit}/>\n            </div>\n\n            <div className={styles.characters}>\n              {characters.map(char => {\n                const id = this.getCharId(char.url).toString();\n                return <CharacterCard name={char.name} key={id} charId={id}/>;\n              })}\n            </div>\n\n            <div className={styles.navBtns}>\n              {prevUrl && <button className={styles.navBtn} onClick={() => this.fetchUrl(prevUrl)}>&lt;&lt; Prev</button>}\n              {nextUrl && <button className={styles.navBtn} onClick={() => this.fetchUrl(nextUrl)}>Next &gt;&gt;</button>}\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default SearchCharacters;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport CharacterInfo from 'controllers/character-info/index.js';\nimport SearchCharacters from 'controllers/search-characters/index.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route exact path={`${process.env.PUBLIC_URL}/`} component={SearchCharacters} />\n          <Route path={`${process.env.PUBLIC_URL}/character-info/:id`} component={CharacterInfo} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}